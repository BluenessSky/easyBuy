<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
	<!-- 提供服务 -->
	<!-- 注册的时候需要给服务起一个名字 -->
	<dubbo:application name="easybuy-seckill" />
	<!-- 注册中心地址(注册中心不一定用zookeeper还可以用redis作为注册中心) -->
	<dubbo:registry protocol="zookeeper" address="192.168.25.128:2181"></dubbo:registry>
	<!-- 使用dubbo的协议在20881端口暴漏服务 -->
	<dubbo:protocol name="dubbo" port="20885"></dubbo:protocol>
	<!-- 声明要暴漏的服务接口 
		interface：这里暴漏了需要提供服务的接口
		ref：就是我们spring容器中管理的bean的id
				在applicationContext-service.xml中进行了扫描@Servie注解，只要用到该注解的类会自动被加载spring容器中，id就是该类名的首字母小写 
	-->
	<dubbo:service interface="org.java.seckill.service.SeckillService" ref="seckillServiceImpl" timeout="300000"></dubbo:service>
</beans>