/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-10-27 08:12:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class seckill_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


    String path = request.getContextPath();
    String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
      out.write("<head>\r\n");
      out.write("\t<base href=\"");
      out.print(basePath);
      out.write("\">   \r\n");
      out.write("\t<title>秒杀详情页面</title>\r\n");
      out.write("\t<!-- bootStrap的样式 -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\r\n");
      out.write("    <!-- jQuery-->\r\n");
      out.write("    <script src=\"script/jquery.min.js\"></script>\r\n");
      out.write("    <!-- 最新的 Bootstrap 核心 JavaScript 文件(模态框来自于该js) -->\r\n");
      out.write("    <script src=\"script/bootstrap.min.js\"></script>\r\n");
      out.write("    ");
      out.write("<script src=\"script/jquery.cookie.min.js\"></script>\r\n");
      out.write("    ");
      out.write("<script src=\"script/jquery.countdown.min.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        //验证手机号\r\n");
      out.write("        function checkPhone(phone) {\r\n");
      out.write("        \t//应该要通过正则表达式进行手机号验证\r\n");
      out.write("            if(phone && phone.length == 11 && isNaN(phone) == false){\r\n");
      out.write("                return true;\r\n");
      out.write("            } else {\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        //开始秒杀(******)\r\n");
      out.write("        function handlerSeckill(seckillId, node) {\r\n");
      out.write("            //获取秒杀地址,控制显示器,执行秒杀\r\n");
      out.write("            node.hide().html('<button class=\"btn btn-primary btn-lg\" id=\"killBtn\">开始秒杀</button>');\r\n");
      out.write("            //暴漏秒杀接口地址\r\n");
      out.write("            $.post('/' + seckillId + '/exposer',{},function (result) {\r\n");
      out.write("                //在回调函数中执行交互过程(执行秒杀方法被调用后返回的结果:success,exposer[md5])\r\n");
      out.write("                if(result['exporsed']){\r\n");
      out.write("                    var exposer = result;\r\n");
      out.write("                    //表示暴漏秒杀接口成功\r\n");
      out.write("                    //开启秒杀,并且获取到秒杀地址\r\n");
      out.write("                    var md5 = exposer.md5;\r\n");
      out.write("                    var killUrl = '/' + seckillId + '/' + md5 + '/execution';\r\n");
      out.write("                    $(\"#killBtn\").click(function () {\r\n");
      out.write("                        //1.点击后将该按钮禁用\r\n");
      out.write("                        $(this).attr(\"disabled\",\"disabled\");\r\n");
      out.write("                        //2.发送秒杀请求，执行秒杀\r\n");
      out.write("                        $.post(killUrl,{},function (result) {\r\n");
      out.write("                        \t//这里也可以通过state是200还是400进行判断\r\n");
      out.write("                            var stateInfo = result['msg'];\r\n");
      out.write("                            //显示秒杀结果\r\n");
      out.write("                            node.html('<span class=\"label label-success\">' + stateInfo + '</span>');\r\n");
      out.write("                        });\r\n");
      out.write("                    });\r\n");
      out.write("                    node.show();\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        //时间判断，记时交互\r\n");
      out.write("        function countDown(seckillId,nowTime,startTime,endTime) {\r\n");
      out.write("            if(nowTime > endTime){\r\n");
      out.write("                //秒杀结束\r\n");
      out.write("                $(\"#seckill-box\").html(\"秒杀结束!\");\r\n");
      out.write("            } else if(nowTime < startTime){\r\n");
      out.write("                //秒杀未开始,计时事件绑定\r\n");
      out.write("                var killTime = new Date(startTime + 1000);//todo 防止时间偏移\r\n");
      out.write("                $('#seckill-box').countdown(killTime, function (event) {\r\n");
      out.write("                    //时间格式\r\n");
      out.write("                    var format = event.strftime('秒杀倒计时: %D天 %H时 %M分 %S秒 ');\r\n");
      out.write("                    $('#seckill-box').html(format);\r\n");
      out.write("                });\r\n");
      out.write("            } else {\r\n");
      out.write("                //开始秒杀\r\n");
      out.write("                handlerSeckill(seckillId,$('#seckill-box'));\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\t\t//检查秒杀的商品是否在秒杀的时间范围内\r\n");
      out.write("        function checkTime() {\r\n");
      out.write("\t\t\t//需要传递过来一个Seckill对象(开始时间，结束时间，秒杀商品的id，)\r\n");
      out.write("            var startTime = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${seckill.startTime.time}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(";           //秒杀开始时间\r\n");
      out.write("            var endTime = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${seckill.endTime.time}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(";               //秒杀结束时间\r\n");
      out.write("            var seckillId = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${seckill.seckillId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(";           //秒杀商品编号\r\n");
      out.write("           \t//去服务器取当前系统的时间\r\n");
      out.write("            $.get(\"/time/now\",{},function (result) {\r\n");
      out.write("                var nowTime = result[\"data\"];   //获取到服务器时间\r\n");
      out.write("                //时间判断，计时交互\r\n");
      out.write("                countDown(seckillId,nowTime,startTime,endTime);\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("\t\t//我们也页面加载的时候\r\n");
      out.write("        $(function(){\r\n");
      out.write("           //从cookie中查找手机号\r\n");
      out.write("           var killPhone = $.cookie(\"killPhone\");\r\n");
      out.write("           //如果没有取到cookie中的秒杀电话，或者是秒杀电话不正确\r\n");
      out.write("            if(checkPhone(killPhone) == false){\r\n");
      out.write("                $(\"#killPhoneModal\").modal({\r\n");
      out.write("                    show:true,   //显示弹出层\r\n");
      out.write("                    backdrop:'static',  //禁止位置关闭\r\n");
      out.write("                    keyboard:false      //关闭键盘事件\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("           //表示cookie有秒杀的电话\r\n");
      out.write("            checkTime();\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        $(function () {\r\n");
      out.write("           $(\"#killPhoneBtn\").click(function () {\r\n");
      out.write("               var inputPhone = $(\"#killPhoneKey\").val();        //获取到输入的秒杀电话号码\r\n");
      out.write("               if(checkPhone(inputPhone)){\r\n");
      out.write("                    //电话写入cookie，7天过期\r\n");
      out.write("                   $.cookie('killPhone',inputPhone,{expires:7, path:'/'});\r\n");
      out.write("                   //验证通过，刷新页面\r\n");
      out.write("                   window.location.reload();\r\n");
      out.write("               } else {\r\n");
      out.write("                   $('#killPhoneMessage').hide().html('<label class=\"label label-danger\">手机号错误</label>').show(300);\r\n");
      out.write("               }\r\n");
      out.write("           });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <div class=\"panel panel-default text-center\">\r\n");
      out.write("        <div class=\"pannel-heading\">\r\n");
      out.write("            <h1>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${seckill.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("</h1>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"panel-body\">\r\n");
      out.write("            <h2 class=\"text-danger\">\r\n");
      out.write("                ");
      out.write("<span class=\"glyphicon glyphicon-time\"></span>\r\n");
      out.write("                ");
      out.write("<span class=\"glyphicon\" id=\"seckill-box\"></span>\r\n");
      out.write("            </h2>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"killPhoneModal\" class=\"modal fade\">\r\n");
      out.write("    <div class=\"modal-dialog\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <h3 class=\"modal-title text-center\">\r\n");
      out.write("                    <span class=\"glyphicon glyphicon-phone\"> </span>秒杀电话:\r\n");
      out.write("                </h3>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <div class=\"row\">\r\n");
      out.write("                    <div class=\"col-xs-8 col-xs-offset-2\">\r\n");
      out.write("                        <input type=\"text\" name=\"killPhone\" id=\"killPhoneKey\"\r\n");
      out.write("                               placeholder=\"填写手机号^o^\" class=\"form-control\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                ");
      out.write("<span id=\"killPhoneMessage\" class=\"glyphicon\"> </span>\r\n");
      out.write("                <button type=\"button\" id=\"killPhoneBtn\" class=\"btn btn-success\">\r\n");
      out.write("                    <span class=\"glyphicon glyphicon-phone\"></span>\r\n");
      out.write("                    Submit\r\n");
      out.write("                </button>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
